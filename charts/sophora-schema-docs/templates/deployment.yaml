apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sophora-schema-docs.fullname" . }}
  labels:
    {{- include "sophora-schema-docs.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "sophora-schema-docs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "sophora-schema-docs.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: schemadoc
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          args:
            {{if eq .Values.schemadocs.mode "static"}}
            [ "--static", "--out", "/out/schemadocs" ]
            {{else}}
            [ "--dynamic" ]
            {{end}}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          {{if eq (.Values.image.tag | default .Chart.AppVersion) "4.0.0" }}
            - mountPath: /data
          {{else}}
            - mountPath: /config
          {{end}}
              name: config
            - mountPath: /out
              name: output-folder
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: JDK_JAVA_OPTIONS
              value: {{ .Values.javaOptions }}
            - name: SOPHORA_CLIENT_SERVERCONNECTION_USERNAME
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.sophora.authentication.secret.usernameKey | quote }}
                  name: {{ required "A valid secret name must be provided in .Values.sophora.authentication.secret.name" .Values.sophora.authentication.secret.name | quote }}
            - name: SOPHORA_CLIENT_SERVERCONNECTION_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: {{ .Values.sophora.authentication.secret.passwordKey | quote }}
                  name: {{ required "A valid secret name must be provided in .Values.sophora.authentication.secret.name" .Values.sophora.authentication.secret.name | quote }}
            {{- if .Values.schemadocs.extraEnv }}
            {{- toYaml .Values.schemadocs.extraEnv | nindent 12 }}
            {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "sophora-schema-docs.name" . }}
        - name: output-folder
          emptyDir: { }